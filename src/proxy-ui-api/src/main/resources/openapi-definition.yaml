---
openapi: 3.0.0
servers:
  - description: X-Road API Design
    url: https://virtserver.swaggerhub.com/Gofore/X-Road/1.0.0
info:
  description: X-Road UI Based API
  version: "1.0.15"
  title: X-Road UI Based API
  contact:
    email: lauri.koutaniemi@gofore.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
tags:
  - name: security server
    description: <br>Security Server API design
  - name: central server
    description: <br>Central Server API design
paths:
  /backups:
    get: # ok
      tags:
        - security server
      summary: get security server backups
      operationId: getBackups
      description: Administrator views the backups for the security server.
      responses:
        '200':
          description: list of security server backups
          content:
            application/json:
              schema:
                type: array
                description: array of backup objects
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/Backup'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add new backup for the security server
      operationId: addBackup
      description: Adds security server backup to the system
      responses:
        '201':
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
        '202':
          description: item accepted
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /backups/upload:
    post: # ok
      tags:
        - security server
      summary: upload new backup for the security server
      operationId: uploadBackup
      description: Uploads new security server backup to the system
      requestBody:
        description: backup to add
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              description: backup file
      responses:
        '201':
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
        '202':
          description: item accepted
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /backups/{filename}:
    delete: # ok
      tags:
        - security server
      summary: delete security server backup
      operationId: deleteBackup
      description: Administrator deletes the backup of the security server.
      parameters:
        - in: path
          name: filename
          description: filename of the backup
          required: true
          schema:
            type: string
            format: filename
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /backups/{filename}/restore:
    put: # ok
      tags:
        - security server
      summary: restore security server configuration from backup
      operationId: restoreBackup
      description: Administrator restores the security server configuration from backup.
      parameters:
        - in: path
          name: filename
          description: filename of the backup
          required: true
          schema:
            type: string
            format: filename
            minLength: 1
            maxLength: 255
      responses:
        '202':
          description: item accepted
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /backups/{filename}/download:
    get: # ok
      tags:
        - security server
      summary: download security server backup
      operationId: downloadBackup
      description: Administrator downloads the backup of the security server.
      parameters:
        - in: path
          name: filename
          description: filename of the backup
          required: true
          schema:
            type: string
            format: filename
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: backup file downloaded
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                description: backup file
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /certificates/{hash}:
    get: # ok
      tags:
        - security server
      summary: get certificate information
      operationId: getCertificate
      description: Administrator views certificate details.
      parameters:
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: certificate details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDetails'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete: # ok
      tags:
        - security server
      summary: delete certificate
      operationId: deleteCertificate
      description: Administrator deletes the certificate.
      parameters:
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /certificates/{hash}/activate:
    put: # ok
      tags:
        - security server
      summary: activate certificate
      operationId: activateCertificate
      description: Administrator activates selected certificate.
      parameters:
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /certificates/{hash}/deactivate:
    put: # ok
      tags:
        - security server
      summary: deactivate certificate
      operationId: deactivateCertificate
      description: Administrator deactivates selected certificate.
      parameters:
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: certificate was deactivated
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /certificates/{hash}/register:
    put: # ok
      tags:
        - security server
      summary: register certificate
      operationId: registerCertificate
      description: Administrator registers selected certificate.
      parameters:
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /certificates/{hash}/unregister:
    put: # ok
      tags:
        - security server
      summary: unregister certificate
      operationId: unregisterCertificate
      description: Administrator unregisters selected certificate.
      parameters:
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: request was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /clients:
    get: # ok
      tags:
        - security server
      summary: find security server clients
      operationId: findClients
      description: Administrator views the clients of the security server.
      parameters:
        - in: query
          name: name
          description: pass an optional search string (name) for looking up clients
          required: false
          schema:
            type: string
            format: text
            minLength: 0
            maxLength: 255
        - in: query
          name: instance
          description: pass an optional search string (instance) for looking up clients
          required: false
          schema:
            type: string
            format: text
            minLength: 0
            maxLength: 255
        - in: query
          name: member_class
          description: pass an optional search string (member_class) for looking up clients
          required: false
          schema:
            type: string
            format: text
            minLength: 0
            maxLength: 255
        - in: query
          name: member_code
          description: pass an optional search string (member_code) for looking up clients
          required: false
          schema:
            type: string
            format: text
            minLength: 0
            maxLength: 255
        - in: query
          name: subsystem_code
          description: pass an optional search string (subsystem_code) for looking up clients
          required: false
          schema:
            type: string
            format: text
            minLength: 0
            maxLength: 255
        - in: query
          name: show_members
          description: to include members for search results
          required: false
          schema:
            type: boolean
            default: true
        - in: query
          name: internal_search
          description: to search only clients inside security server
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: list of clients
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of client objects
                items:
                  $ref: '#/components/schemas/Client'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add new client for the security server
      operationId: addClient
      description: Adds new client to the system
      requestBody:
        description: client to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientAdd'
      responses:
        '201':
          description: new client created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: there are warnings or errors related to the service description
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /clients/{id}:
    get: # ok
      tags:
        - security server
      summary: get security server client information
      operationId: getClient
      description: Administrator views the client details of the security server.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '200':
          description: client object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    patch: # ok
      tags:
        - security server
      summary: update security server client information
      operationId: updateClient
      description: Administrator updates the client information.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      requestBody:
        content:
          application/json:
            schema:
              title: ConnectionTypeWrapper
              type: object
              description: connection type
              properties:
                connection_type:
                  $ref: '#/components/schemas/ConnectionType'
      responses:
        '200':
          description: client modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete: # ok
      tags:
        - security server
      summary: delete security server client
      operationId: deleteClient
      description: Administrator deletes the client of the security server.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '204':
          description: client deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /clients/{id}/local-groups:
    get: # ok
      tags:
        - security server
      summary: get local groups for the selected client
      operationId: getClientGroups
      description: Administrator views the local groups for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '200':
          description: list of local groups
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of local group objects
                items:
                  $ref: '#/components/schemas/LocalGroup'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add new local group for the security server client
      operationId: addClientGroup
      description: Administrator adds a new local group for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      requestBody:
        description: group to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalGroup'
      responses:
        '201':
          description: local group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalGroup'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /clients/{id}/register:
    put: # ok
      tags:
        - security server
      summary: register security server client
      operationId: registerClient
      description: Administrator registers client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '204':
          description: client was registered
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /clients/{id}/service-clients:
    get: # ok
      tags:
        - security server
      summary: get service clients for the selected client
      operationId: getClientServiceClients
      description: Administrator views the service clients for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '200':
          description: list of service clients
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of service client objects
                items:
                  $ref: '#/components/schemas/ServiceClient'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add new service client for the security server client
      operationId: addClientServiceClient
      description: Administrator adds a new service client for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      requestBody:
        content:
          application/json:
            schema:
              title: ServiceClientId
              type: object
              properties:
                id:
                  type: string
                  format: text
                  description: id of the service client
                  minLength: 1
                  maxLength: 1279
      responses:
        '201':
          description: service client added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceClient'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /clients/{id}/sign-certificates:
    get: # ok
      tags:
        - security server
      summary: get security server client certificates information
      operationId: getClientSignCertificates
      description: Administrator views the certificates for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '200':
          description: list of certificates
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of certificate (details) objects
                items:
                  $ref: '#/components/schemas/TokenCertificate'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /clients/{id}/tls-certificates:
    get: # ok
      tags:
        - security server
      summary: get security server client TLS certificates information
      operationId: getClientTlsCertificates
      description: Administrator views the TLS certificates for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '200':
          description: list of tls certificates
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of certificate (details) objects
                items:
                  $ref: '#/components/schemas/CertificateDetails'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add new certificate for the security server client
      operationId: addClientTlsCertificate
      description: Administrator adds a new certificate for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      requestBody:
        description: certificate to add
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              description: certificate file
      responses:
        '201':
          description: certificate added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDetails'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /clients/{id}/tls-certificates/{hash}:
    get: # ok
      tags:
        - security server
      summary: get TLS certificate
      operationId: getClientTlsCertificate
      description: Administrator gets the TLS certificate for the selected client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: certificate details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDetails'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete: # ok
      tags:
        - security server
      summary: delete certificate
      operationId: deleteClientTlsCertificate
      description: Administrator deletes the certificate from selected client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
        - in: path
          name: hash
          description: SHA-1 hash of the certificate
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: certificate deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /clients/{id}/unregister:
    put: # ok
      tags:
        - security server
      summary: unregister security server client
      operationId: unregisterClient
      description: Administrator unregisters client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '204':
          description: unregister was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /clients/{id}/service-descriptions:
    get: # ok
      tags:
        - security server
      summary: get security server client service descriptions
      operationId: getClientServiceDescriptions
      description: Administrator views the service descriptions for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      responses:
        '200':
          description: list of service descriptions
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of service description objects
                items:
                  $ref: '#/components/schemas/ServiceDescription'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add new service description for the security server client
      operationId: addClientServiceDescription
      description: Administrator adds a new service description for the client.
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDescriptionAdd'
      responses:
        '201':
          description: service description created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDescription'
        '400':
          description: there are warnings or errors related to the service description
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /clients/{id}/subjects:
    get: # ok
      tags:
        - security server
      summary: find access right subjects
      operationId: findSubjects
      description: Administrator views the clients, globalgroups and localgroups of the security server as access right subjects
      parameters:
        - in: path
          name: id
          description: id of the client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
        - in: query
          name: member_name_group_description
          description: pass an optional search string (name) for looking up subjects - name of a member or description of a group
          example: NIIS | Some group description
          required: false
          schema:
            type: string
            format: text
            minLength: 0
            maxLength: 255
        - in: query
          name: subject_type
          description: pass an optional search string (subject_type) for looking up subjects
          required: false
          schema:
            $ref: '#/components/schemas/SubjectType'
        - in: query
          name: instance
          description: pass an optional search string (instance) for looking up subjects - full instance id should be used
          example: GOV
          required: false
          schema:
            type: string
            format: text
            minLength: 0
            maxLength: 255
        - in: query
          name: member_class
          description: pass an optional search string (member_class) for looking up subjects
          required: false
          schema:
            type: string
            format: text
            minLength: 0
            maxLength: 255
        - in: query
          name: member_group_code
          description: pass an optional search string (member_group_code) for looking up subjects - member_code of a member or group_code of a group
          example: 1234 | Example group code
          required: false
          schema:
            type: string
            format: text
            minLength: 0
            maxLength: 255
        - in: query
          name: subsystem_code
          description: pass an optional search string (subsystem_code) for looking up subjects
          example: Subsystem1
          required: false
          schema:
            type: string
            format: text
            minLength: 0
            maxLength: 255
      responses:
        '200':
          description: list of subjects
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of Subjects
                items:
                  $ref: '#/components/schemas/Subject'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /local-groups/{group_id}:
    get: # ok
      tags:
        - security server
      summary: get local group information
      operationId: getGroup
      description: Administrator views local group details.
      parameters:
        - in: path
          name: group_id
          description: id of the local group
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: group object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalGroup'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    put: # ok
      tags:
        - security server
      summary: update local group information
      operationId: updateGroup
      description: Administrator updates the local group information.
      parameters:
        - in: path
          name: group_id
          description: id of the local group
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: description
          description: local group description
          required: false
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: local group modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalGroup'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete: # ok
      tags:
        - security server
      summary: delete local group
      operationId: deleteGroup
      description: Administrator deletes the local group.
      parameters:
        - in: path
          name: group_id
          description: id of the local group
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: local group deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /local-groups/{group_id}/members:
    post: # ok
      tags:
        - security server
      summary: add new member for the local group
      operationId: addGroupMember
      description: Administrator adds a new member for the local group.
      parameters:
        - in: path
          name: group_id
          description: id of the local group
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Members'
      responses:
        '201':
          description: new members added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Members'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /local-groups/{group_id}/members/delete:
    post: # ok
      tags:
        - security server
      summary: delete member from local group
      operationId: deleteGroupMember
      description: Administrator deletes the member from local group.
      parameters:
        - in: path
          name: group_id
          description: id of the local group
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Members'
      responses:
        '204':
          description: members deleted
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /keys/{id}:
    get: # ok
      tags:
        - security server
      summary: get information for the selected key in selected token
      operationId: getKey
      description: Administrator views key details.
      parameters:
        - in: path
          name: id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: key object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    patch: # ok
      tags:
        - security server
      summary: update key information
      operationId: updateKey
      description: Administrator updates the key information.
      parameters:
        - in: path
          name: id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      requestBody:
        content:
          application/json:
            schema:
              title: KeyName
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Friendly name of a key
                  format: text
                  minLength: 1
                  maxLength: 255
              example:
                name: my-key-0
      responses:
        '200':
          description: key modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete: # ok
      tags:
        - security server
      summary: delete key
      operationId: deleteKey
      description: Administrator deletes the key.
      parameters:
        - in: path
          name: id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: key deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /keys/{id}/certificates:
    post: # ok
      tags:
        - security server
      summary: add new certificate for selected key
      operationId: addCertificate
      description: Adds certificate to the system
      parameters:
        - in: path
          name: id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      requestBody:
        description: certificate to add
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              description: certificate file
      responses:
        '201':
          description: certificate created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDetails'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /keys/{id}/generate-csr:
    put: # ok
      tags:
        - security server
      summary: generate csr for the selected key
      operationId: genrerateCsr
      description: Administrator generates csr for the key.
      parameters:
        - in: path
          name: id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: key_usage
          description: inteded usage for the key (signing or authentication)
          required: false
          schema:
            $ref: '#/components/schemas/KeyUsageType'
        - in: query
          name: approved_ca
          description: approved certification service
          required: false
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: csr_format
          description: format of the certificate signing request (PEM or DER)
          required: false
          schema:
            $ref: '#/components/schemas/CsrFormat'
        - in: query
          name: member_id
          description: security server client the certificate will be issued for (only for signing certificates)
          required: false
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '201':
          description: CSR created
          content:
            application/pkcs10:
              schema:
                type: string
                format: binary
                description: csr file
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /keys/{id}/delete-csr:
    put: # ok
      tags:
        - security server
      summary: delete csr from the selected key
      operationId: deleteCsr
      description: Administrator deletes csr from the key.
      parameters:
        - in: path
          name: id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: query
          name: csr_id
          description: id of the csr
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: csr deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /member-classes:
    get: # ok
      tags:
        - security server
      summary: get list of known member classes
      operationId: getMemberClasses
      description: Administrator lists member classes.
      parameters:
        - in: query
          name: current_instance
          description: if true, return member classes for this instance.
            if false (default), return member classes for all instances
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          description: key object
          content:
            application/json:
              schema:
                type: array
                description: array of member classes
                uniqueItems: true
                items:
                  type: string
                  format: text
                  minLength: 1
                  maxLength: 255
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /member-classes/{id}:
    get: # ok
      tags:
        - security server
      summary: get list of known member classes for a given instance
      operationId: getMemberClassesForInstance
      description: Administrator lists member classes for a given instance.
      parameters:
        - in: path
          name: id
          description: instance id
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: key object
          content:
            application/json:
              schema:
                type: array
                description: array of member classes
                uniqueItems: true
                items:
                  type: string
                  format: text
                  minLength: 1
                  maxLength: 255
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /language:
    put: # ok
      tags:
        - security server
      summary: change language
      operationId: language
      description: Administrator changes the language for the UI.
      parameters:
        - in: path
          name: code
          description: code of the language (language code)
          required: true
          schema:
            type: string
            format: text
            minLength: 2
            maxLength: 2
      responses:
        '200':
          description: language changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /user:
    get: # ok
      tags:
        - security server
      summary: get user data for the logged user
      operationId: user
      description: Administrator gets user data from backend.
      responses:
        '200':
          description: user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /security-servers/{id}:
    get: # ok
      tags:
        - security server
      summary: get security server information
      operationId: getSecurityServer
      description: SS administrator views the details of a security server.
      parameters:
        - in: path
          name: id
          description: id of the security server
          required: true
          schema:
            type: string
            format: text
            description: <instance_id>:<member_class>:<member_code>:<security_server_code>
            example: FI:GOV:123:sserver1
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityServer'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /services/{id}:
    get: # ok
      tags:
        - security server
      summary: get service
      operationId: getService
      description: Administrator views selected service.
      parameters:
        - in: path
          name: id
          description: id of the service
          required: true
          schema:
            type: string
            example: CS:ORG:Client:myService.v1
            format: text
            minLength: 1
            maxLength: 1535
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    patch: # ok
      tags:
        - security server
      summary: update service
      operationId: updateService
      description: Administrator updates the service.
      parameters:
        - in: path
          name: id
          description: id of the service
          required: true
          schema:
            type: string
            example: CS:ORG:Client:myService.v1
            format: text
            minLength: 1
            maxLength: 1535
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceUpdate'
      responses:
        '200':
          description: service modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /services/{id}/access-rights:
    get: # ok
      tags:
        - security server
      summary: get access rights for the selected service
      operationId: getServiceAccessRights
      description: Administrator views service access rights.
      parameters:
        - in: path
          name: id
          description: id of the service
          required: true
          schema:
            type: string
            example: CS:ORG:Client:myService.v1
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: list of service client and access rights
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of service client objects
                items:
                  $ref: '#/components/schemas/ServiceClient'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post:
      tags:
        - security server
      summary: add new access right for the selected service
      operationId: addServiceAccessRight
      description: Adds access right to the service
      parameters:
        - in: path
          name: id
          description: id of the service
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subjects'
      responses:
        '201':
          description: access rights added
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of added service client objects
                items:
                  $ref: '#/components/schemas/ServiceClient'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /services/{id}/access-rights/delete:
    post: # ok
      tags:
        - security server
      summary: remove access right
      operationId: deleteServiceAccessRight
      description: Administrator removes access right from selected service.
      parameters:
        - in: path
          name: id
          description: id of the service
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subjects'
      responses:
        '204':
          description: access right(s) deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /service-clients/{id}/access-rights:
    get: # ok
      tags:
        - security server
      summary: get access rights for the selected service client.
      operationId: getServiceClientAccessRights
      description: Administrator views service client's access rights.
      parameters:
        - in: path
          name: id
          description: id of the service client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1279
      responses:
        '200':
          description: list of access rights
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of access right objects
                items:
                  $ref: '#/components/schemas/AccessRight'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add new access right for selected service client
      operationId: addServiceClientAccessRight
      description: Adds access right to the service client.
      parameters:
        - in: path
          name: id
          description: id of the service client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1279
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subjects'
      responses:
        '201':
          description: access right(s) added
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of added access right objects
                items:
                  $ref: '#/components/schemas/AccessRight'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /service-clients/{id}/access-rights/delete:
    post: # ok
      tags:
        - security server
      summary: remove access right
      operationId: deleteServiceClientAccessRight
      description: Administrator removes access right from selected service client.
      parameters:
        - in: path
          name: id
          description: id of the service client
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 1279
      requestBody:
        description: list of access rights to be deleted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subjects'
      responses:
        '204':
          description: access right(s) deleted
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /service-descriptions/{id}:
    get: # ok
      tags:
        - security server
      summary: get service description with provided id
      operationId: getServiceDescription
      description: Administrator views a service description with a certain id.
      parameters:
        - in: path
          name: id
          description: id of the service description
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: wanted service description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDescription'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    patch: # ok
      tags:
        - security server
      summary: update url or service code for the selected service description
      operationId: updateServiceDescription
      description: Administrator updates the selected service description.
      parameters:
        - in: path
          name: id
          description: id of the service description
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDescriptionUpdate'
      responses:
        '200':
          description: service description modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDescription'
        '400':
          description: there are warnings or errors related to the service description
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete: # ok
      tags:
        - security server
      summary: delete service description
      operationId: deleteServiceDescription
      description: Administrator deletes the service description.
      parameters:
        - in: path
          name: id
          description: id of the service description
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: service description deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /service-descriptions/{id}/disable:
    put: # ok
      tags:
        - security server
      summary: disable selected service description
      operationId: disableServiceDescription
      description: Administrator disables service description.
      parameters:
        - in: path
          name: id
          description: id of the service description
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      requestBody:
        required: false
        content:
          application/json:
            schema:
              title: ServiceDescriptionDisabledNotice
              type: object
              properties:
                disabled_notice:
                  type: string
                  format: text
                  description: disabled service notice
                  minLength: 0
                  maxLength: 255
      responses:
        '204':
          description: service description disabled
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /service-descriptions/{id}/enable:
    put: # ok
      tags:
        - security server
      summary: enable selected service description
      operationId: enableServiceDescription
      description: Administrator enables service description.
      parameters:
        - in: path
          name: id
          description: id of the service description
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: service description enabled
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /service-descriptions/{id}/refresh:
    put: # ok
      tags:
        - security server
      summary: refresh selected service description
      operationId: refreshServiceDescription
      description: Administrator refreshes service description.
      parameters:
        - in: path
          name: id
          description: id of the service description
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      requestBody:
        content:
          application/json:
            schema:
              title: IgnoreWarnings
              type: object
              properties:
                ignore_warnings:
                  type: boolean
                  default: false
                  description: if true, any ignorable warnings are ignored. if false (or missing),
                    any warnings cause request to fail
      responses:
        '200':
          description: service description refreshed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDescription'
        '400':
          description: there are warnings or errors related to the service description
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /service-descriptions/{id}/services:
    get: # ok
      tags:
        - security server
      summary: get services for the selected service description
      operationId: getServiceDescriptionServices
      description: Administrator views the services for the selected service description.
      parameters:
        - in: path
          name: id
          description: id of the service description
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: list of services
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of service objects
                items:
                  $ref: '#/components/schemas/Service'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system: # ok
    get:
      tags:
        - security server
      summary: get system information
      operationId: getSystem
      description: Administrator views the system information.
      responses:
        '200':
          description: system information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/anchor:
    get: # ok
      tags:
        - security server
      summary: view the configuration anchor information
      operationId: getAnchor
      description: Administrator views the configuration anchor information.
      responses:
        '200':
          description: anchor information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Anchor'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: upload a configuration anchor file
      operationId: uploadAnchor
      description: Administrator uploads configuration anchor file
      requestBody:
        description: configuration anchor
        content:
          application/xml:
            schema:
              type: string
              format: ascii
              description: configuration anchor file
              minLength: 1
              maxLength: 1000000
      responses:
        '201':
          description: configuration anchor uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Anchor'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /system/anchor/download:
    get: # ok
      tags:
        - security server
      summary: download configuration anchor information
      operationId: downloadAnchor
      description: Administrator downloads the configuration anchor information.
      responses:
        '200':
          description: configuration anchor
          content:
            application/xml:
              schema:
                type: string
                format: ascii
                description: configuration anchor file
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/certificate:
    get: # ok
      tags:
        - security server
      summary: view the security server certificate information
      operationId: getSystemCertificate
      description: Administrator views the security server TLS certificate information.
      responses:
        '200':
          description: certificate information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDetails'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/certificate/export:
    get: # ok
      tags:
        - security server
      summary: download the security server certificate as gzip compressed tar archive
      operationId: downloadSystemCertificate
      description: Administrator downloads the security server TLS certificate.
      responses:
        '200':
          description: information fetched successfully
          content:
            application/gzip:
              schema:
                type: string
                format: binary
                description: certificate file
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/certificate/generate-tls-key:
    put: # ok
      tags:
        - security server
      summary: generate new TLS key
      operationId: generateSystemCertificateTlsKey
      description: Administrator generates new tls key.
      responses:
        '204':
          description: tls key generated
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/certificate/generate-csr:
    put: # ok
      tags:
        - security server
      summary: generate new certificate request
      operationId: generateSystemCertificateRequest
      description: Administrator generates new certificate request.
      responses:
        '204':
          description: certificate request generated
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/certificate/import:
    post: # ok
      tags:
        - security server
      summary: import new internal TLS certificate.
      operationId: importSystemCertificate
      description: Administrator imports new internal TLS certificate
      requestBody:
        description: certificate to add
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              description: certificate file
      responses:
        '201':
          description: tls certificate imported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDetails'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /system/timestamping-services:
    get: # ok
      tags:
        - security server
      summary: view the timestamping services
      operationId: getTimestampingServices
      description: Administrator views the timestamping services.
      responses:
        '200':
          description: list of timestamping services
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of timestamping service objects
                items:
                  $ref: '#/components/schemas/TimestampingService'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post: # ok
      tags:
        - security server
      summary: add a timestamping service
      operationId: addTimestampingService
      description: Administrator selects new timestamping service
      requestBody:
        description: Timestamping service to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimestampingService'
      responses:
        '201':
          description: timestamping service created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimestampingService'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /system/timestamping-services/{url}:
    delete: # ok
      tags:
        - security server
      summary: delete timestamping service
      operationId: deleteTimestampingService
      description: Administrator removes timestamping service.
      parameters:
        - in: path
          name: url
          description: url of the timestamping service
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: timestamping service deletion was successful
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '500':
          description: internal server error
  /system/version:
    get: # ok
      tags:
        - security server
      summary: get information for the system version
      operationId: systemVersion
      description: Administrator views key details.
      responses:
        '200':
          description: system version information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /tokens:
    get: # ok
      tags:
        - security server
      summary: get security server tokens
      operationId: getTokens
      description: Administrator views tokens of the security server.
      responses:
        '200':
          description: list of tokens
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                description: array of token objects
                items:
                  $ref: '#/components/schemas/Token'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /tokens/{id}:
    get: # ok
      tags:
        - security server
      summary: get security server token information
      operationId: getToken
      description: Administrator views the token details of the security server.
      parameters:
        - in: path
          name: id
          description: id of the token
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: token object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    patch: # ok
      tags:
        - security server
      summary: update security server token information
      operationId: updateToken
      description: Administrator updates the token information.
      parameters:
        - in: path
          name: id
          description: id of the token
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      requestBody:
        content:
          application/json:
            schema:
              title: TokenName
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: friendly name of the token
                  format: text
                  minLength: 1
                  maxLength: 255
              example:
                name: my-token-0
      responses:
        '200':
          description: token modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /tokens/{id}/keys:
    post: # ok
      tags:
        - security server
      summary: add new key
      operationId: addKey
      description: Adds key for selected token.
      parameters:
        - in: path
          name: id
          description: id of the token
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      requestBody:
        content:
          application/json:
            schema:
              title: KeyLabel
              type: object
              properties:
                label:
                  type: string
                  format: text
                  description: label for the new key
                  minLength: 1
                  maxLength: 255
              example:
                label: My new key
      responses:
        '201':
          description: key created for the token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists or token not logged in
        '500':
          description: internal server error
  /tokens/{token_id}/keys/{key_id}/certificates:
    post: # ok
      tags:
        - security server
      summary: import a certificate from a software or hardware token
      operationId: importCertificateFromToken
      description: imports a certificate from a software or hardware token
      parameters:
        - in: path
          name: token_id
          description: id of the token
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
        - in: path
          name: key_id
          description: id of the key
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      requestBody:
        content:
          application/json:
            schema:
              title: CertificateId
              type: object
              properties:
                id:
                  type: string
                  format: text
                  description: id of the importable certificate
                  minLength: 1
                  maxLength: 255
              example:
                id: 28A18C53F9450D451F2A4BB15BA2FE3EE0AE69BD
      responses:
        '201':
          description: certificate imported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDetails'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists or token not logged in
        '500':
          description: internal server error
  /tokens/{id}/login:
    put: # ok
      tags:
        - security server
      summary: login to token
      operationId: loginToken
      description: Login to token
      parameters:
        - in: path
          name: id
          description: id of the token
          required: true
          schema:
            type: string
            format: text
            minLength: 1
      requestBody:
        content:
          application/json:
            schema:
              title: TokenPassword
              type: object
              properties:
                password:
                  type: string
                  format: text
                  description: password for logging in to the token
                  minLength: 1
              example:
                password: sm3!!ycat
      responses:
        '200':
          description: logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /tokens/{id}/logout:
    put: # ok
      tags:
        - security server
      summary: logout from token
      operationId: logoutToken
      description: Administrator logs out from token.
      parameters:
        - in: path
          name: id
          description: id of the token
          required: true
          schema:
            type: string
            format: text
            minLength: 1
      responses:
        '200':
          description: logged out
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /xroad-instances:
    get: # ok
      tags:
        - security server
      summary: get list of known xroad instance identifiers
      operationId: getXroadInstances
      description: Administrator lists xroad instance identifiers
      responses:
        '200':
          description: xroad instance identifiers
          content:
            application/json:
              schema:
                type: array
                description: array of xroad instance identifiers
                uniqueItems: true
                items:
                  type: string
                  format: text
                  minLength: 1
                  maxLength: 255
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: X-Road-ApiKey token=<api key>
      # https://github.com/nordic-institute/X-Road-REST-UI/blob/XRDDEV-237/doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md#1911-creating-new-api-keys
  schemas:
    AccessRight: # ok
      type: object
      description: access right for clients and services
      required:
        - id
        - client_id
        - service_code
        - service_title
      properties:
        id:
          type: string
          format: text
          description: access right id
          example: 123
          minLength: 1
          maxLength: 255
          readOnly: true
        client_id:
          type: string
          format: text
          description: <instance_id>:<member_class>:<member_code>:<subsystem>(optional)
          example: FI:GOV:123:ABC
          minLength: 1
          maxLength: 255
        service_code:
          type: string
          format: text
          description: service code
          example: clientDeletion
          minLength: 1
          maxLength: 255
        service_title:
          type: string
          format: text
          description: service title
          example: client deletion
          minLength: 1
          maxLength: 255
    Anchor: # ok
      type: object
      description: security server anchor
      required:
        - hash
        - created_at
      properties:
        hash:
          type: string
          format: hash
          description: anchor hash
          example: 42:34:C3:22:55:42:34:C3:22:55:42:34:C3:22:55:42:34:C3:22:55:42:34:C3:22:55:42:34:C3
          minLength: 1
          maxLength: 255
        created_at:
          type: string
          format: date-time
          description: anchor created at
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
    Backup: # ok
      type: object
      description: security server backup
      required:
        - filename
        - created_at
      properties:
        filename:
          type: string
          format: filename
          description: backup filename
          example: configuration_backup_20181224.tar
          minLength: 1
          maxLength: 255
        created_at:
          type: string
          format: date-time
          description: backup created at
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
    TokenCertificateSigningRequest: # ok
      type: object
      description: CSR for certificate that is stored in a Token
      required:
        - id
        - owner_id
      properties:
        id:
          type: string
          format: text
          description: CSR id
          example: 0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF
          readOnly: true
        owner_id:
          type: string
          format: text
          description: client id of the owner member, <instance_id>:<member_class>:<member_code>
          example: FI:GOV:123
          minLength: 1
          maxLength: 767
          readOnly: true
    TokenCertificate: # ok
      type: object
      description: certificate that is stored in a Token (auth or sign cert)
      required:
        - ocsp_status
        - owner_id
        - active
        - saved_to_configuration
        - certificate_details
        - status
      properties:
        ocsp_status:
          $ref: '#/components/schemas/CertificateOcspStatus'
        owner_id:
          type: string
          format: text
          description: client id of the owner member, <instance_id>:<member_class>:<member_code>
          example: FI:GOV:123
          minLength: 1
          maxLength: 767
          readOnly: true
        active:
          type: boolean
          description: if the certificate is active
          example: true
        saved_to_configuration:
          type: boolean
          description: if the certificate is saved to configuration
          example: true
        certificate_details:
          $ref: '#/components/schemas/CertificateDetails'
        status:
          $ref: '#/components/schemas/CertificateStatus'
    CertificateDetails: # ok
      type: object
      description: certificate details for any kind of certificate (TLS, auth, sign)
      required:
        - issuer_distinguished_name
        - issuer_common_name
        - subject_distinguished_name
        - subject_common_name
        - not_before
        - not_after
        - serial
        - version
        - signature_algorithm
        - signature
        - public_key_algorithm
        - rsa_public_key_modulus
        - rsa_public_key_exponent
        - hash
        - key_usages
      properties:
        issuer_distinguished_name:
          type: string
          format: text
          description: certificate issuer distinguished name
          example: issuer123
          minLength: 1
          maxLength: 255
        issuer_common_name:
          type: string
          format: text
          description: certificate issuer common name
          example: domain.com
          minLength: 1
          maxLength: 255
        subject_distinguished_name:
          type: string
          format: text
          description: certificate subject distinguished name
          example: subject123
          minLength: 1
          maxLength: 255
        subject_common_name:
          type: string
          format: text
          description: certificate subject common name
          example: domain.com
          minLength: 1
          maxLength: 255
        not_before:
          type: string
          format: date-time
          description: certificate validity not before
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
        not_after:
          type: string
          format: date-time
          description: certificate validity not after
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
        serial:
          type: string
          format: text
          description: serial number
          example: '123456789'
          minLength: 1
          maxLength: 255
        version:
          type: integer
          format: int32
          example: 3
          description: version
        signature_algorithm:
          type: string
          format: sha-256
          description: certificate signature algorithm
          example: sha256WithRSAEncryption
          minLength: 1
          maxLength: 255
        signature:
          type: string
          format: text
          description: hex encoded certificate signature
          example: '30af2fdc1780...'
          minLength: 1
          maxLength: 255
        public_key_algorithm:
          type: string
          format: sha-256
          description: certificate public key algorithm
          example: 'sha256WithRSAEncryption'
          minLength: 1
          maxLength: 255
        rsa_public_key_modulus:
          type: string
          format: hex
          description: hex encoded RSA public key modulus (if RSA key)
          example: c44421d601...
          minLength: 1
          maxLength: 1000
        rsa_public_key_exponent:
          type: integer
          format: int32
          description: RSA public key exponent (if RSA key) as an integer
          example: 65537
        hash:
          type: string
          format: text
          description: certificate SHA-1 hash
          example: 1234567890ABCDEF
          minLength: 1
          maxLength: 255
        key_usages:
          type: array
          description: certificate key usage array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/KeyUsage'
    CertificateAuthority: # ok
      type: object
      description: certificate authority
      required:
        - name
        - response
        - expires_at
      properties:
        name:
          type: string
          format: text
          description: distinguished name
          example: /C=FI/O=X-Road Test/OU=X-Road Test CA OU/CN=X-Road Test CA CN
          minLength: 1
          maxLength: 255
        response:
          type: string
          format: text
          description: certificate authority response
          example: N/A
          minLength: 1
          maxLength: 1000
        expires_at:
          type: string
          format: date-time
          description: certificate authority expires at
          example: '2099-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
    CertificateStatus: # ok
      type: string
      format: enum
      description: certificate status
      example: IN_USE
      enum:
        - SAVED
        - REGISTRATION_IN_PROGRESS
        - REGISTERED
        - DELETION_IN_PROGRESS
        - GLOBAL_ERROR
    CertificateOcspStatus: # ok
      type: string
      format: enum
      description: certificate status
      example: IN_USE
      enum:
        - DISABLED
        - EXPIRED
        - OCSP_RESPONSE_UNKNOWN
        - OCSP_RESPONSE_GOOD
        - OCSP_RESPONSE_SUSPENDED
        - OCSP_RESPONSE_REVOKED
    Client: # ok
      type: object
      description: x-road client
      required:
        - member_class
        - member_code
        - subsystem_code
      properties:
        id:
          type: string
          format: text
          description: <instance_id>:<member_class>:<member_code>:<subsystem>(optional)
          example: FI:GOV:123:ABC
          minLength: 1
          maxLength: 1023
          readOnly: true
        member_name:
          type: string
          format: text
          description: member name
          example: FI
          minLength: 1
          maxLength: 255
        member_class:
          type: string
          format: text
          description: member class
          example: GOV
          minLength: 1
          maxLength: 255
        member_code:
          type: string
          format: text
          description: member code
          example: 123
          minLength: 1
          maxLength: 255
        subsystem_code:
          type: string
          format: text
          description: subsystem code
          example: ABC
          minLength: 1
          maxLength: 255
        connection_type:
          $ref: '#/components/schemas/ConnectionType'
        status:
          $ref: '#/components/schemas/ClientStatus'
    ClientAdd: # ok
      type: object
      description: request to add client. Carries a Client and ignore warnings parameter
      required:
        - client
      properties:
        client:
          $ref: '#/components/schemas/Client'
        ignore_warnings:
          type: boolean
          default: false
          description: if true, any ignorable warnings are ignored. if false (or missing),
            any warnings cause request to fail
    ClientStatus: # ok
      type: string
      format: enum
      description: client status
      example: REGISTERED
      enum:
        - REGISTERED
        - SAVED
        - GLOBAL_ERROR
        - REGISTRATION_IN_PROGRESS
        - DELETION_IN_PROGRESS
    ConfigurationStatus: # ok
      type: string
      format: enum
      description: configuration status
      example: SUCCESS
      enum:
        - SUCCESS # Everything ok
        - CONFCLIENT_STATUS_FAILED # Global configuration client status query failed
        - ERROR_CODE_INTERNAL # Internal error occurred."
        - ERROR_CODE_INVALID_SIGNATURE_VALUE # Invalid signature value."
        - ERROR_CODE_EXPIRED_CONF # The downloaded global configuration has expired."
        - ERROR_CODE_CANNOT_DOWNLOAD_CONF # Unable to download global configuration. Check network connection to global configuration provider."
        - ERROR_CODE_MISSING_PRIVATE_PARAM # The downloaded global configuration did not contain private parameters
    CodeWithMetadata:
      type: object
      description: object that contains a code identifier and possibly collection of
        associated metadata. Used to relay error and warning information.
      required:
        - code
      properties:
        code:
          type: string
          format: text
          description: identifier of the item (for example errorcode)
          example: adding_services
        metadata:
          type: array
          description: array containing metadata associated with the item. For example names of services
            were attempted to add, but failed
          uniqueItems: true
          items:
            type: string
            format: text
    ConnectionType: # ok
      type: string
      format: enum
      description: connection type
      example: HTTP
      default: HTTP
      enum:
        - HTTP
        - HTTPS
        - HTTPS_NO_AUTH
    CsrFormat: # ok
      type: string
      format: enum
      description: csr format
      example: PEM
      default: PEM
      enum:
        - PEM
        - DER
    ErrorInfo:
      type: object
      description: object returned in error cases
      required:
        - status
      properties:
        status:
          type: integer
          format: int32
          description: http status code
          example: 400
        error:
          $ref: '#/components/schemas/CodeWithMetadata'
        warnings:
          type: array
          description: warnings that could be ignored
          uniqueItems: true
          items:
            $ref: '#/components/schemas/CodeWithMetadata'
    GlobalConfiguration: # ok
      type: object
      description: global configuration
      required:
        - status
        - updated_at
        - next_update_at
      properties:
        status:
          $ref: '#/components/schemas/ConfigurationStatus'
        updated_at:
          type: string
          format: date-time
          description: last time updated
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
        next_update_at:
          type: string
          format: date-time
          description: last time updated
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
    LocalGroup: # ok
      type: object
      description: group
      required:
        - code
        - description
      properties:
        id:
          type: string
          format: text
          description: unique identifier
          example: 123
          readOnly: true
        code:
          type: string
          format: text
          description: group code
          example: groupcode
          minLength: 1
          maxLength: 255
        description:
          type: string
          format: text
          description: group description
          example: description
          minLength: 1
          maxLength: 255
        member_count:
          type: integer
          format: uint
          description: member count
          example: 10
          minimum: 0
          maximum: 1000000
        updated_at:
          type: string
          format: date-time
          description: last time updated
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
        members:
          type: array
          description: group members
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GroupMember'
    GroupMember: # ok
      type: object
      description: group member
      required:
        - id
        - name
        - created_at
      properties:
        id:
          type: string
          format: text
          description: group member id
          example: FI:GOV:123:SS1
          minLength: 1
          maxLength: 1023
        name:
          type: string
          format: text
          description: group member name
          example: Member123
          minLength: 1
          maxLength: 255
        created_at:
          type: string
          format: date-time
          description: group member created at
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
    Key: # ok
      type: object
      description: key for the certificate
      required:
        - id
        - name
        - label
        - certificates
        - certificate_signing_requests
        - usage
      properties:
        id:
          type: string
          format: text
          description: key id
          example: 0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF
          minLength: 1
          maxLength: 40
          readOnly: true
        name:
          type: string
          format: text
          description: key name
          example: friendly name
          minLength: 1
          maxLength: 255
        label:
          type: string
          format: text
          description: key label
          example: key label
          minLength: 1
          maxLength: 255
        certificates:
          type: array
          description: list of certificates for the key
          items:
            $ref: '#/components/schemas/TokenCertificate'
        certificate_signing_requests:
          type: array
          description: list of CSRs for the key
          items:
            $ref: '#/components/schemas/TokenCertificateSigningRequest'
        usage:
          $ref: '#/components/schemas/KeyUsageType'
        available:
          type: boolean
          description: if the key is available
          example: true
        saved_to_configuration:
          type: boolean
          description: if the key is saved to configuration
          example: true
    KeyUsage: # ok
      type: string
      format: enum
      description: certificate key usage
      example: NON_REPUDIATION
      enum:
        - DIGITAL_SIGNATURE
        - NON_REPUDIATION
        - KEY_ENCIPHERMENT
        - DATA_ENCIPHERMENT
        - KEY_AGREEMENT
        - KEY_CERT_SIGN
        - CRL_SIGN
        - ENCIPHER_ONLY
        - DECIPHER_ONLY
    KeyUsageType: # ok
      type: string
      format: enum
      description: intended usage for the key
      example: AUTHENTICATION
      enum:
        - AUTHENTICATION
        - SIGNING
    KeyValuePair: # ok
      type: object
      description: key-value pair of strings
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: key
        value:
          type: string
          description: value
    Language: # ok
      type: object
      description: language
      required:
        - id
      properties:
        id:
          type: string
          format: text
          description: language code
          example: en
          minLength: 2
          maxLength: 2
          readOnly: true
    Members: # ok
      type: object
      description: request object containing an array of member ids
      properties:
        items:
          type: array
          description: array of members to be added
          items:
            type: string
            format: text
            minLength: 1
            maxLength: 1023
    OcspResponders: # ok
      type: object
      description: ocsp responce
      required:
        - url
        - status
        - updated_at
        - next_update_at
      properties:
        url:
          type: string
          format: url
          description: service url
          example: https://domain.com/service
          minLength: 1
          maxLength: 255
        status:
          $ref: '#/components/schemas/OcspStatus'
        updated_at:
          type: string
          format: date-time
          description: last time updated
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
        next_update_at:
          type: string
          format: date-time
          description: last time updated
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
    OcspStatus: # ok
      type: string
      format: enum
      description: OCSP responder status
      example: SUCCESS
      enum:
        - SUCCESS # Everything ok
        - ERROR_CODE_OCSP_CONNECTION_ERROR # Unable to connect to the OCSP responder.
        - ERROR_CODE_OCSP_FAILED # Unable to fetch response from the OCSP responder.
        - ERROR_CODE_OCSP_RESPONSE_INVALID # Unable to parse the OCSP response.
        - ERROR_CODE_OCSP_UNINITIALIZED # Status request not sent yet.
    SecurityServer: # ok
      type: object
      description: security server information
      required:
        - id
      properties:
        id:
          type: string
          format: text
          description: <instance_id>:<member_class>:<member_code>:<security_server_code>
          example: FI:GOV:123:sserver1
        instance_id:
          type: string
          format: text
          description: xroad instance id
          example: FI
          minLength: 1
          maxLength: 255
        member_class:
          type: string
          format: text
          description: member class
          example: GOV
          minLength: 1
          maxLength: 255
        member_code:
          type: string
          format: text
          description: member code
          example: 123
          minLength: 1
          maxLength: 255
        server_code:
          type: string
          format: text
          description: security server code
          example: server123
          minLength: 1
          maxLength: 255
    Service: # ok
      type: object
      description: service for the service description
      required:
        - id
        - service_code
        - url
        - timeout
      properties:
        id:
          type: string
          format: text
          description: encoded service id, including client id
          example: CS:ORG:Client:myService.v1
          minLength: 1
          maxLength: 1535
        service_code:
          type: string
          format: text
          description: encoded service code and version
          example: myService.v1
          minLength: 1
          maxLength: 511
        timeout:
          type: integer
          format: uint
          description: service time out value
          example: 60
          minimum: 0
          maximum: 1000
        ssl_auth:
          type: boolean
          description: service ssl auth
          example: true
        subjects_count:
          type: integer
          format: uint
          description: count of acl subjects
          example: 5
          minimum: 0
          maximum: 100000
        url:
          type: string
          format: url
          description: service url
          example: https://domain.com/service
          minLength: 1
          maxLength: 255
    ServiceUpdate: # ok
      type: object
      description: object for updating a service or all services within service description
      required:
        - service
      properties:
        service:
          $ref: '#/components/schemas/Service'
        url_all:
          description: url is applied for all services
          type: boolean
          example: false
          default: false
        timeout_all:
          description: timeout value is applied for all services
          type: boolean
          example: false
          default: false
        ssl_auth_all:
          description: ssl authentication is applied for all services
          type: boolean
          example: false
          default: false
    ServiceClient: # ok
      type: object
      description: service client
      required:
        - subject
        - rights_given_at
        - access_rights
      properties:
        subject:
          $ref: '#/components/schemas/Subject'
        rights_given_at:
          type: string
          format: date-time
          description: access right given at
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
        access_rights:
          type: array
          description: list of access rights - this will be null when requested via services/{id}/access-rights endpoint
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AccessRight'
    ServiceDescription: # ok
      type: object
      description: WSDL/REST service
      required:
        - id
        - url
        - type
        - disabled
        - disabled_notice
        - refreshed_at
        - services
        - client_id
      properties:
        id:
          type: string
          description: unique identifier
          example: 123
        url:
          type: string
          format: url
          description: service url
          example: http://dev.xroad.rocks/services.wsdl
          minLength: 1
          maxLength: 255
        type:
          $ref: '#/components/schemas/ServiceType'
        disabled:
          type: boolean
          description: service disabled
          example: true
        disabled_notice:
          type: string
          format: text
          description: disabled notice
          example: default_disabled_service_notice
          minLength: 0
          maxLength: 255
        refreshed_at:
          type: string
          format: date-time
          description: time for service refresh
          example: "2018-12-15T00:00:00.001Z"
          minLength: 24
          maxLength: 24
        services:
          type: array
          description: service description services
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Service'
        client_id:
          type: string
          format: text
          description: <instance_id>:<member_class>:<member_code>:<subsystem>(optional)
          example: FI:GOV:123:ABC
          minLength: 1
          maxLength: 255
    ServiceDescriptionAdd:
      type: object
      description: request object containing service description url, service code and type
      required:
        - url
        - type
      properties:
        url:
          type: string
          format: text
          description: path for the service description file
          example: https://domain.com/service
          minLength: 1
          maxLength: 255
        rest_service_code:
          type: string
          format: text
          description: service code for REST service
          example: exampleServiceCode
          minLength: 1
          maxLength: 255
        ignore_warnings:
          type: boolean
          description: if true, any ignorable warnings are ignored. if false (or missing),
            any warnings cause request to fail
          default: false
        type:
          $ref: '#/components/schemas/ServiceType'
    ServiceDescriptionUpdate:
      type: object
      description: request object for updating a service description url or service code
      properties:
        url:
          type: string
          format: text
          description: path for the service description file
          example: https://domain.com/service
          minLength: 1
          maxLength: 255
        rest_service_code:
          type: string
          format: text
          description: service code for REST service
          example: exampleServiceCode
          minLength: 1
          maxLength: 255
        ignore_warnings:
          type: boolean
          description: if true, any ignorable warnings are ignored. if false (or missing),
            any warnings cause request to fail
          default: false
        type:
          $ref: '#/components/schemas/ServiceType'
    ServiceType: # ok
      type: string
      format: text
      description: service type
      example: WSDL
      enum:
        - WSDL
        - REST
    Subject: # ok
      type: object
      description: subject
      required:
        - id
        - subject_type
      properties:
        id:
          type: string
          format: text
          description: subject id - can be a subsystem id <instance_id>:<member_class>:<member_code>:<subsystem> | globalgroup id <instance_id>:<group_code> | localgroup resource id in number format <id>
          example: DEV:ORG:1234:Subsystem | DEV:security-server-owners | 123
          minLength: 1
          maxLength: 1279
        member_name_group_description:
          type: string
          format: text
          description: name of the subject - can be the name of a member or the description of a group
          example: Security server owners
          readOnly: true
          minLength: 1
          maxLength: 255
        local_group_code:
          type: string
          format: text
          description: group code in case the object is a local group
          example: My own Local group code
          minLength: 1
          maxLength: 255
          readOnly: true
        subject_type:
          $ref: '#/components/schemas/SubjectType'
    SubjectType: # ok
      type: string
      format: text
      description: subject type
      example: GLOBALGROUP
      enum:
        - GLOBALGROUP
        - LOCALGROUP
        - SUBSYSTEM
    Subjects: # ok
      type: object
      description: object containing and array of subject ids
      properties:
        items:
          type: array
          uniqueItems: true
          description: array of subject ids
          items:
            $ref: '#/components/schemas/Subject'
    System: # ok
      type: object
      description: system parameters
      required:
        - anchor
        - configuration
        - timestamping_services
        - ocsp_responders
        - certificate_authorities
        - tls_certificate
        - version
      properties:
        anchor:
          $ref: '#/components/schemas/Anchor'
        configuration:
          $ref: '#/components/schemas/GlobalConfiguration'
        timestamping_services:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/TimestampingService'
        ocsp_responders:
          $ref: '#/components/schemas/OcspResponders'
        certificate_authorities:
          type: array
          description: system certificate authorities
          uniqueItems: true
          items:
            $ref: '#/components/schemas/CertificateAuthority'
        tls_certificate:
          $ref: '#/components/schemas/CertificateDetails'
        version:
          $ref: '#/components/schemas/Version'
    TimestampingService: # ok
      type: object
      description: timestamping services
      required:
        - name
        - url
        - status
        - message
        - updated_at
      properties:
        name:
          type: string
          format: text
          description: name of the time stamping service
          example: X-Road Test TSA CN
          minLength: 1
          maxLength: 255
        url:
          type: string
          format: url
          description: url of the time stamping service
          example: http://dev.xroad.rocks:123
          minLength: 1
          maxLength: 255
        updated_at:
          type: string
          format: date-time
          description: last time updated
          example: '2018-12-15T00:00:00.001Z'
          minLength: 24
          maxLength: 24
        message:
          type: string
          format: text
          description: timestamping service message
          example: ok
          minLength: 1
          maxLength: 255
        status:
          $ref: '#/components/schemas/TimestampingStatus'
    TimestampingStatus: # ok
      type: string
      format: enum
      description: timestamping status
      example: SUCCESS
      enum:
        - SUCCESS # Everything ok
        - ERROR_CODE_TIMESTAMP_REQUEST_TIMED_OUT # Connection to the timestamp server timed out. Check the network connection to the timestamp server.
        - ERROR_CODE_MALFORMED_TIMESTAMP_SERVER_URL # Malformed timestamp server URL. Check the URL.
        - ERROR_CODE_UNKNOWN # Unknown error code.
        - ERROR_CODE_UNINITIALIZED # The configuration client is initializing.
        - ERROR_CODE_TIMESTAMP_UNINITIALIZED # Connection ok, no timestamp request made yet.
        - ERROR_CODE_CONNECTION_FAILED # Connection to configuration client failed. Ensure that xroad-confclient is running.
    Token: # ok
      type: object
      description: token
      required:
        - id
        - name
        - type
        - keys
        - status
        - logged_in
        - available
        - saved_to_configuration
        - read_only
      properties:
        id:
          type: string
          format: text
          description: token id
          example: 0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF
          minLength: 1
          readOnly: true
        name:
          type: string
          format: text
          description: token name
          example: softToken-0
          minLength: 1
          maxLength: 255
        type:
          $ref: '#/components/schemas/TokenType'
        keys:
          type: array
          description: token keys
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Key'
        status:
          $ref: '#/components/schemas/TokenStatus'
        logged_in:
          type: boolean
          description: if the token has been logged in to
          example: true
        available:
          type: boolean
          description: if the token is available
          example: true
        saved_to_configuration:
          type: boolean
          description: if the token is saved to configuration
          example: true
        read_only:
          type: boolean
          description: if the token is read-only
          example: true
        serial_number:
          type: string
          format: text
          description: serial number of the token
          example: 12345
        token_infos:
          type: array
          description: Contains label-value pairs of information
          items:
            $ref: '#/components/schemas/KeyValuePair'
    TokenStatus: # ok
      type: string
      format: text
      description: token type
      example: OK
      enum:
        - OK # Normal operation status
        - USER_PIN_LOCKED # Blocked
        - USER_PIN_INCORRECT # Incorrect PIN was entered
        - USER_PIN_INVALID # Invalid PIN
        - USER_PIN_EXPIRED # PIN expired
        - USER_PIN_COUNT_LOW # Only a few tries left
        - USER_PIN_FINAL_TRY # Final try
        - NOT_INITIALIZED # Not inited
    TokenType: # ok
      type: string
      format: text
      description: token type
      example: SOFTWARE
      enum:
        - SOFTWARE
        - HARDWARE
    User: # ok
      type: object
      description: x-road user
      required:
        - username
        - roles
        - permissions
      properties:
        username:
          type: string
          format: text
          description: user username
          example: Guest
          minLength: 1
          maxLength: 255
        roles:
          type: array
          description: user roles
          uniqueItems: true
          items:
            type: string
            format: text
        permissions:
          type: array
          description: user permissions
          uniqueItems: true
          items:
            type: string
            format: text
    Version: # ok
      type: object
      description: version information
      required:
        - info
      properties:
        info:
          type: string
          format: text
          description: information about the security server
          example: Security Server version 6.21.0-SNAPSHOT-20190411git32add470
          minLength: 1
          maxLength: 255
security:
  - ApiKeyAuth: []
